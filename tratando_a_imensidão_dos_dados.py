# -*- coding: utf-8 -*-
"""Tratando a imensidão dos dados

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dlZaIVMaNX2PXsQd3YITWdfZ9I7egfjd

Microatividade 1: Descrever como ler um arquivo CSV usando a biblioteca Pandas
"""

import pandas as pd
# Variável contendo o caminho do arquivo CSV
file_path = '/content/data.csv'
# Ler o conteúdo do arquivo CSV
dados = pd.read_csv(file_path, sep=';', engine='python')

print(dados)

"""Microatividade 2: Descrever como criar um subconjunto de dados a partir de um conjunto existente usando a biblioteca Pandas"""

# Variável contendo subconjunto de colunas, selecionando ID, duração e calorias
subconjunto_dados = dados[['ID', 'Duration', 'Calories']]

print(subconjunto_dados)

"""Microatividade 3: Descrever como configurar o número máximo de linhas a serem exibidas na visualização de um conjunto de dados usando a biblioteca Pandas"""

# Define o novo valor para a propriedade max_rows
pd.set_option('display.max_rows', 9999)

print(dados.to_string())

"""Microatividade 4: Descrever como exibir as primeiras e últimas “N” linhas de um conjunto de dados usando a biblioteca Pandas"""

print("Primeiras 10 linhas:")
print(dados.head(10))

print("\nÚltimas 10 linhas:")
print(dados.tail(10))

"""Microatividade 5: Descrever como exibir informações gerais sobre as colunaslinhas e dados de um conjunto de dados usando a biblioteca Pandas"""

print("Informações gerais do conjunto de dados:")
dados.info()

total_linhas = dados.shape[0]
total_colunas = dados.shape[1]
quantidade_nulos = dados.isnull().sum()
tipos_dados = dados.dtypes
memoria_utilizada = dados.memory_usage(deep=True).sum()

print(f"\nTotal de linhas: {total_linhas}")
print(f"Total de colunas: {total_colunas}")
print(f"Quantidade de dados nulos:\n{quantidade_nulos}")
print(f"Tipos de dados de cada coluna:\n{tipos_dados}")
print(f"Quantidade de memória utilizada: {memoria_utilizada} bytes")

"""Missão Prática:"""

# Variável contendo a cópia dos dados
dados_copia = dados.copy()

# Substituição de todos os valores nulos da coluna 'Calories' por 0
dados_copia['Calories'].fillna(0, inplace=True)

print(dados_copia)

# Substituição de todos os valores nulos da coluna 'Date' por '1900/01/01'
dados_copia['Date'].fillna('1900/01/01', inplace=True)

print(dados_copia)

# Tranforma os dados da coluna 'Date' em datetime
dados_copia['Date'] = pd.to_datetime(dados_copia['Date'])

dados_copia['Date'].replace('1900/01/01', pd.NA, inplace=True)

dados_copia['Date'] = pd.to_datetime(dados_copia['Date'], errors='coerce')

print(dados_copia)

# Substitui o valor "20201226" no formato correto
dados_copia['Date'] = dados_copia['Date'].astype(str).replace('20201226', '2020/12/26')

dados_copia['Date'] = pd.to_datetime(dados_copia['Date'], errors='coerce')

print("\nApós transformar a coluna 'Date' para datetime:")
print(dados_copia)

# Remove os registros contendo valores nulos
dados_copia.dropna(inplace=True)

print("\nDataframe final após remover registros com valores nulos:")
print(dados_copia)